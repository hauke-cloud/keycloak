apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: {{ include "keycloak.name" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  {{- with .Values.keycloak.hostname }}
  hostname:
  {{- toYaml . | nindent 4 }}
  {{- end }}

  ingress:
    enabled: false

  {{- with .Values.keycloak.image }}
  image: {{ .repository }}:{{ .tag | default .Chart.AppVersion }}
  {{- end }}

  instances: {{ .Values.keycloak.replicaCount | default 1 }}

  {{- with .Values.keycloak.resources }}
  resources:
  {{- toYaml . | nindent 4}}
  {{- end }}

  db:
  {{- if (hasKey .Values.keycloak "db") }}
  {{- toYaml .Values.keycloak.db | nindent 4 }}
  {{- else }}
    vendor: postgres
    database: {{ .Values.database.bootstrap.initdb.database | default "keycloak" }}
    schema: public
    host: {{ include "keycloak.name" . }}-db-rw.{{ .Release.Namespace }}.svc.cluster.local
    port: 5432
    passwordSecret:
      name: {{ include "keycloak.name" . }}-db-app
      key: password
      optional: false
    usernameSecret:
      name: {{ include "keycloak.name" . }}-db-app
      key: username
      optional: false
  {{- end }}

  {{- with .Values.keycloak.http }}
  http:
  {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with .Values.keycloak.additionalOptions }}
  additionalOptions:
  {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- if or (and (hasKey .Values.keycloak "unsupported") (.Values.keycloak.unsupported)) (and (hasKey .Values.keycloak "themeDownloader") (hasKey .Values.keycloak.themeDownloader "enabled") (.Values.keycloak.themeDownloader.enabled)) }}
  unsupported:
    {{- with .Values.keycloak.unsupported }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.keycloak.themeDownloader }}
    {{- if .enabled }}
    podTemplate:
      spec:
        {{- with .imagePullSecret }}
        imagePullSecrets:
        - name: {{ . }}
        {{- end }}
        initContainers:
          - name: theme-downloader
            image: {{ .image.repository }}:{{ .image.tag }} {{ if .fluxImageObserver.enabled }} # {"$imagepolicy": "{{ (and (hasKey .fluxImageObserver "overrideImagePolicy") (.fluxImageObserver.overrideImagePolicy)) | default (printf "%s:%s" $.Release.Namespace "theme-downloader") }}"} {{ end }}
            volumeMounts:
              - name: themes
                mountPath: /opt/keycloak/themes
        containers:
          - name: keycloak
            volumeMounts:
              - name: themes
                mountPath: /opt/keycloak/themes
        volumes:
          - name: themes
            emptyDir: {}
    {{- end }}
    {{- end }}
  {{- end }}
